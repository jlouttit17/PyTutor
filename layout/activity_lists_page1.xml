<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#113977"
    tools:context=".MainActivity">
    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginRight="16dp"
        android:text="Skip to Quiz"
        app:backgroundTint="#959507"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Lists"
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="22dp"
        android:text="Lists, along with tuples (See Tuples Lesson), store multiple items within one variable. This
makes it easier to hold and manipulate larger clusters of data.
\nTo create a list, declare a variable, but instead of a single value, use brackets to enclose
multiple items separated by commas.
\n\nExample:
\n\nmyList=[“First”, “Second”, “Third”]
\nprint(myList)
\n\nThis example will output the following: [‘First’, ‘Second’, ‘Third’]
\nAs seen, printing the list allows for multiple data points to be outputted at once, which is much
more efficient than printing each individual item.
\n\nLists are ordered, meaning each item in the list has a place associated with it, based on where it
is in the list. Like other programming languages, the first item in the list will be denoted 0, with
the second one being denoted 1, and so on. These individual items can be called by using
brackets after the list name.
\n\nExample:
\n\nmyList=[“First”, “Second”, “Third”]
\nprint(myList[2])
\n\nThis will display the value at the two place, the third item in the list ‘Third’."
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/button2" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="272dp"
        android:layout_marginLeft="272dp"
        android:layout_marginBottom="30dp"
        android:text="Next Page"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="260dp"
        android:layout_marginRight="260dp"
        android:layout_marginBottom="30dp"
        android:text="Back to List"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>