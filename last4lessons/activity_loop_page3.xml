<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#113977"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginRight="16dp"
        android:text="Skip to Quiz"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Lists"
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="11dp"
        android:text="The If statement:
\nThe if statement is not a loop, but behaves similarly. It has a condition, and the body of the
statement is only executed if the condition is true. Moreover, it can be combined with the elif and
else statements to have multiple conditions and options for those conditions.
\n\nExample:
\n\nx=5
\ny=6
\nif y<x
\n   print(“y is less than x”)
\nelif y==x
\n   print(“The values are equal”)
\nelse
\n   print(“x>y”)
\n\nThis example checks the condition for the if statement, sees it is not true, checks the condition
for the elif statement, sees it is not true, and finally executes the body of the else statement. You
can have multiple elif statements as well.
You can also check multiple conditions with the and operator
"

        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/button2" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="272dp"
        android:layout_marginLeft="272dp"
        android:layout_marginBottom="30dp"
        android:text="Next Page"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="260dp"
        android:layout_marginRight="260dp"
        android:layout_marginBottom="30dp"
        android:text="Back to List"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>