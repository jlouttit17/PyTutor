<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#113977"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginRight="16dp"
        android:text="Skip to Quiz"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Functions"
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="11dp"
        android:text="
Example:
\n\ndef myFunction(x,y):
\n   print(x,y)
\nz=”Hi”
\nmyFunction(z,”Hello”)
\n\nIn this example, myFunction is defined as needing the arguments x and y, and then printing the
values of those variables. When the function is called, it takes the variable, z, as the x
argument, and the string ”Hello” as the y argument. So this iteration will print: Hi Hello.
Notice that the example asks for two arguments. Passing more or less than two arguments in
this instance will return an error, as the amount of arguments needs to be equal to the amount
that the function is defined with.
\nBy using an asterisk before the argument name in the definition, the argument will become a
tuple, meaning it can take an undefined number of arguments when it is called.
\n\nExample:
\n\ndef myFunction(*x):
\n   print(x[2])
\nmyFunction(”Hello”,”This”,”Is”,”The”,”Example”)
\nmyFunction(1,2,5,8,11)
\n\nThis example uses a tuple as the argument, so the first time the function is called, it will print the
word Is. The second time, it will print the number 5."
        android:textColor="@color/white"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/button2" />

    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="272dp"
        android:layout_marginLeft="272dp"
        android:layout_marginBottom="30dp"
        android:text="Next Page"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="260dp"
        android:layout_marginRight="260dp"
        android:layout_marginBottom="30dp"
        android:text="Back to List"
        android:textColor="@color/black"
        app:backgroundTint="#959507"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>